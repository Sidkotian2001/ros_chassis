#include <iostream>
#include <cmath>
#include <iomanip>
using namespace std;

void controller(float, float, float, float);
void table(float, float, float, float);

int main()
{
    float a, b, c, d;

    cout << "Enter original position coordinates" << endl;
    cin >> a >> b;

    cout << "enter final position coordinates" << endl;
    cin >> c >> d;


    cout << "current position" << "\t" << "linear velocity" << "\t\t" << "angular velocity" << endl;


    controller(a, b, c, d);


    return 0;
}

void controller(float x1, float y1, float x2, float y2)
{
    //initialising variables
    //setting discrete time interval to 0.1 sec and length between the two wheels to 1m
    float phi_des, phi = 0, time = 0.1, Kp = 6, lin_vel, ang_vel, error1, error2;
    float x3 = x1, y3 = y1, dist, dist_trav_x, dist_trav_y;
    float Vr, Vl, length = 1.0;
    int c = 0; // counter

    for (int i = 0; i < 15; i++)
    {

        if ((x3 == x2) && (y3 == y2)) //to check if bot has reached the destination
        {
            table(x3, y3, 0, 0);
            break;
        }

        dist = hypot((x2 - x1), (y2 - y1));
        error1 = dist;

        phi_des = atan2((y2 - y1) , (x2 - x1));
        error2 = phi_des - phi;


        float num = M_PI * pow(10, c); // to generate a random number
        c++;
        int n = round(num);
        n = n % 10;
        if (n != 9) //if bot will accept the command
        {
               lin_vel = Kp * error1;
               ang_vel = Kp * error2;
        }


        Vr = ((ang_vel * length) + (2 * lin_vel)) / 2;  //right wheel velocity
        Vl = ((2 * lin_vel) - (ang_vel * length)) / 2;  //left wheel velocity

        phi = ang_vel * time;
        dist_trav_x = ((Vr * cos(phi)) + (Vl * cos(phi)) / 2) * time;
        dist_trav_y = ((Vr * sin(phi)) + (Vl * sin(phi)) / 2) * time;

        table(x3, y3, lin_vel, ang_vel);

        x3 = x1 + dist_trav_x;
        y3 = y1 + dist_trav_y;

        x1 = x3;
        y1 = y3;

    }
}

//will display the output and all numbers upto 5 decimal places
void table(float x,float y, float lin_vel, float ang_vel)
{
       cout << setprecision(5) << x << " , " << setprecision(5) << y << "\t\t\t" << setprecision(5) << lin_vel << "\t\t\t" << setprecision(5) << ang_vel << endl;

}
